//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AirSupplyComponent airSupply { get { return (AirSupplyComponent)GetComponent(GameComponentsLookup.AirSupply); } }
    public bool hasAirSupply { get { return HasComponent(GameComponentsLookup.AirSupply); } }

    public void AddAirSupply(Finegamedesign.Utils.Timer newTimer, float newInitialTime) {
        var index = GameComponentsLookup.AirSupply;
        var component = CreateComponent<AirSupplyComponent>(index);
        component.timer = newTimer;
        component.initialTime = newInitialTime;
        AddComponent(index, component);
    }

    public void ReplaceAirSupply(Finegamedesign.Utils.Timer newTimer, float newInitialTime) {
        var index = GameComponentsLookup.AirSupply;
        var component = CreateComponent<AirSupplyComponent>(index);
        component.timer = newTimer;
        component.initialTime = newInitialTime;
        ReplaceComponent(index, component);
    }

    public void RemoveAirSupply() {
        RemoveComponent(GameComponentsLookup.AirSupply);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAirSupply;

    public static Entitas.IMatcher<GameEntity> AirSupply {
        get {
            if (_matcherAirSupply == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AirSupply);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAirSupply = matcher;
            }

            return _matcherAirSupply;
        }
    }
}
